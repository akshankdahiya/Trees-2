//TC = O(n)  n -> nodes
//SC = O(n)
class Pair{
    
    private TreeNode node;
    private int num;
    
    
    Pair(TreeNode node, int num){
        
        this.node = node;
        this.num = num;
    }
    
    public TreeNode getNode(){
        return node; 
    }
    public int getNum(){
        return num; 
    }

}

class Solution {
    
    public int sumNumbers(TreeNode root) {
        
        int sum = 0;
        int num = 0;
        
        Stack<Pair> stack = new Stack<>();
                
        while(root != null || !stack.isEmpty()){
            
            while(root != null){
              
            stack.push(new Pair(root, num));
                num = num*10 + root.val;
                root = root.left;
           }
            
            Pair pair = stack.pop();
            root = pair.getNode();
            
            
            //processed left child
            if(root.left == null || root.right == null){
                
                sum += (pair.getNum() * 10 + root.val);
                
            }
            
            num = pair.getNum()*10 + root.val;
            
            root = root.right;
            
        }
        
        return sum;
      
    }
}
